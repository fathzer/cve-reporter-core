package com.fathzer.cvereporter.utils;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.fail;
import static org.mockserver.model.HttpRequest.request;
import static org.mockserver.model.HttpResponse.response;

import java.io.IOException;
import java.net.Proxy;
import java.net.URL;

import org.junit.jupiter.api.AfterAll;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.Test;
import org.mockserver.integration.ClientAndServer;

import com.fathzer.cvereporter.utils.TinyRestClient.FailureException;

class TinyRestClientTest {
	private static ClientAndServer mockServer;

	@BeforeAll
	static void startServer() {
		mockServer = ClientAndServer.startClientAndServer();
		mockServer.when(request("/err400")).respond(response("error").withStatusCode(400));
	}
	
	@AfterAll
	static void stopServer() {
		mockServer.stop();
	}

	@Test
	void test() throws IOException {
		final URL url = new URL("http://127.0.0.1:"+mockServer.getPort()+"/err400");
		try {
			new TinyRestClient().request(Proxy.NO_PROXY, url, null);
			fail("Should throw a FailureException");
		} catch (FailureException e) {
			assertEquals(400, e.getResponseCode());
			assertEquals("error", new String(StreamUtils.readAllBytes(e.getErrorStream())));
		}
	}
}
