package com.fathzer.cvereporter.cve;

import static org.junit.jupiter.api.Assertions.*;

import java.util.Arrays;
import java.util.List;
import java.util.stream.Collectors;

import org.junit.jupiter.api.Test;

import com.fathzer.cvereporter.Alert;
import com.fathzer.cvereporter.DependencySet.ArtifactId;
import com.fathzer.cvereporter.common.Dependency;
import com.fathzer.cvereporter.common.VersionRange;

class DataBaseTest {

	@Test
	void test() {
		final ArtifactId log4JCore = new ArtifactId("org.apache.logging.log4j", "log4j-core");
		final CVE log4JShell = new CVE(log4JCore, new VersionRange("[2.0,2.12.2),[2.13.0,2.16.0)"), "Log4JShell");
		
		assertFalse(log4JShell.concerns(new Dependency("toto","log4j-core","2.0.1")));
		assertFalse(log4JShell.concerns(new Dependency("org.apache.logging.log4j","log4j","2.0.1")));
		assertFalse(log4JShell.concerns(new Dependency(log4JCore,"1.9.1")));
		assertFalse(log4JShell.concerns(new Dependency(log4JCore,"2.16.0")));
		assertFalse(log4JShell.concerns(new Dependency(log4JCore,"2.12.2")));
		assertTrue(log4JShell.concerns(new Dependency(log4JCore,"2.15.0")));
		assertTrue(log4JShell.concerns(new Dependency(log4JCore,"2.0.0")));

		final DataBase db = new DataBase();
		db.add(log4JShell);
		db.add(new CVE(log4JCore, new VersionRange("[1.9.0,2.0.2)"), "log4j1"));
		final ArtifactId ab = new ArtifactId("a","b");
		db.add(new CVE(ab, new VersionRange("[1.0.0,1.0.2)"), "ab1"));
		final List<Alert> alerts = db.apply(Arrays.asList(new Dependency(log4JCore,"2.0.1"),new Dependency(ab,"1.0.1")));
		assertEquals(2,alerts.size());
		assertEquals(Arrays.asList("Log4JShell","log4j1"),getDescriptions(log4JCore, alerts));
		assertEquals(Arrays.asList("ab1"),getDescriptions(ab, alerts));
	}

	protected List<String> getDescriptions(final ArtifactId log4JCore, final List<Alert> alerts) {
		return alerts.stream().filter(a->a.getDependency().getId().equals(log4JCore)).findFirst().get().getCauses().stream().map(CVE::getDescription).collect(Collectors.toList());
	}
}
