package com.fathzer.cvereporter.cve;

import static org.junit.jupiter.api.Assertions.*;

import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import java.util.stream.Collectors;

import org.junit.jupiter.api.Test;

import com.fathzer.cvereporter.Alert;
import com.fathzer.cvereporter.common.Artifact;
import com.fathzer.cvereporter.common.Dependency;
import com.fathzer.cvereporter.common.Version;
import com.fathzer.cvereporter.common.VersionRange;

class DataBaseTest {

	@Test
	void test() throws IOException {
		final Artifact log4JCore = new Artifact("org.apache.logging.log4j", "log4j-core");
		final CVE log4JShell = new CVE("CVE-2021-???", log4JCore, new VersionRange("[2.0,2.12.2),[2.13.0,2.16.0)"), "Log4JShell");
		
		try (DataBase db = new DataBase()) {
			db.add(log4JShell);
			db.add(new CVE("CVE-2021-???", log4JCore, new VersionRange("[1.9.0,2.0.2)"), "log4j1"));
			final Artifact ab = new Artifact("a","b");
			db.add(new CVE("CVE-2021-???", ab, new VersionRange("[1.0.0,1.0.2)"), "ab1"));
			final List<Alert> alerts = db.apply(Arrays.asList(new Dependency(log4JCore,new Version("2.0.1"),true),new Dependency(ab,new Version("1.0.1"),false)));
			assertEquals(2,alerts.size());
			assertEquals(Arrays.asList("Log4JShell","log4j1"),getDescriptions(log4JCore, alerts));
			assertEquals(Arrays.asList("ab1"),getDescriptions(ab, alerts));
		}
	}

	protected List<String> getDescriptions(final Artifact log4JCore, final List<Alert> alerts) {
		return alerts.stream().filter(a->a.getDependency().getArtifact().equals(log4JCore)).findFirst().get().getCauses().stream().map(CVE::getDescription).collect(Collectors.toList());
	}
}
