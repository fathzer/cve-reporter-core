package com.fathzer.cvereporter.cve;

import static org.junit.jupiter.api.Assertions.*;

import java.io.IOException;
import java.io.InputStream;
import java.nio.file.Paths;
import java.util.Arrays;
import java.util.HashSet;
import java.util.List;
import java.util.stream.Collectors;

import org.junit.jupiter.api.Test;

import com.fathzer.cvereporter.Alert;
import com.fathzer.cvereporter.common.ArtifactId;
import com.fathzer.cvereporter.common.Dependency;

class GitLabAdvisoryDatabaseTest {

	@Test
	void test() throws IOException {
		try (InputStream in = getClass().getResourceAsStream("/advisories.zip")) {
			try (DataBase db = new GitLabAdvisoryDatabase(in)) {
				final ArtifactId api = new ArtifactId("org.apache.logging.log4j", "log4j-api");
				List<CVE> cves = db.getCVEList(api);
				assertEquals(1, cves.size());
				CVE cve = cves.get(0);
				assertEquals(api, cve.getId());
				assertEquals("CVE-2021-44228",cve.getIdentifier());
				assertEquals(9.8,cve.getScore(), 0.01);
				assertEquals(2, cve.getReferences().size());
				assertEquals(71, cve.getDescription().length());
		
				final ArtifactId artifactId = new ArtifactId("org.apache.logging.log4j", "log4j-core");
				cves = db.getCVEList(artifactId);
				assertEquals(2, cves.size());
				List<Alert> alerts = db.apply(Arrays.asList(new Dependency(artifactId, "1.9.9")));
				assertEquals(1, alerts.size());
				assertEquals(1, alerts.get(0).getCauses().size());
				assertEquals("CVE-2020-9488", alerts.get(0).getCauses().get(0).getIdentifier());
		
				alerts = db.apply(Arrays.asList(new Dependency(artifactId, "2.0.9")));
				assertEquals(1, alerts.size());
				assertEquals(2, alerts.get(0).getCauses().size());
				assertEquals(new HashSet<>(Arrays.asList("CVE-2020-9488","CVE-2021-44228")), alerts.get(0).getCauses().stream().map(CVE::getIdentifier).collect(Collectors.toSet()));
				
				assertNull(db.getCVEList(new ArtifactId("titi", "toto")));
				
				cve = ((GitLabAdvisoryDatabase)db).read(api,Paths.get("src/test/resources/minimalCVE.yml"));
				assertTrue(cve.getScore()<0);
				assertEquals(0, cve.getReferences().size());
			}
		}
	}
}
