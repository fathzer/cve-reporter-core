package com.fathzer.cvereporter;

import static org.junit.jupiter.api.Assertions.*;

import java.util.Arrays;
import java.util.List;

import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.Test;

import com.fathzer.cvereporter.builder.BuildStatus;
import com.fathzer.cvereporter.common.Artifact;
import com.fathzer.cvereporter.common.Dependency;
import com.fathzer.cvereporter.common.Project;
import com.fathzer.cvereporter.common.Version;
import com.fathzer.cvereporter.common.VersionRange;
import com.fathzer.cvereporter.cve.CVE;

class ProjectReportTest {
	private static final Artifact ab = new Artifact("a","b");
	private static final VersionRange range = new VersionRange("(1.0,]");
	private static final CVE cve1 = new CVE("1", ab, range, "cve1");
	private static final CVE cve2 = new CVE("2", ab, range, "cve2");
	private static final CVE cve3 = new CVE("3", ab, range, "cve3");
	private static final Dependency dependency = new Dependency(ab,new Version("0.9.0"));

	@BeforeAll
	static void init() {
		cve2.setScore(4.0);
		cve3.setScore(6.0);
		cve3.setReferences(Arrays.asList("toto"));
	}

	@Test
	void test() {
		List<Alert> alerts = Arrays.asList(new Alert(dependency,Arrays.asList(cve1)), new Alert(dependency, Arrays.asList(cve2, cve3)));
		ProjectCVEReport pr = new ProjectCVEReport(new Project("a","a"), BuildStatus.OK, alerts);
		assertEquals(6.0, pr.getAlerts().get(0).getMaxScore(), 0.1);
		assertTrue(pr.getAlerts().get(pr.getAlerts().size()-1).hasUnknownScore());

		alerts = Arrays.asList(new Alert(dependency, Arrays.asList(cve2)), new Alert(dependency,Arrays.asList(cve3)));
		pr = new ProjectCVEReport(new Project("a","a"), BuildStatus.OK, alerts);
		assertEquals(6.0, pr.getAlerts().get(0).getMaxScore(), 0.1);
		assertFalse(pr.getAlerts().get(pr.getAlerts().size()-1).hasUnknownScore());
	}
}
