import java.io.IOException;
import java.util.List;

import com.fathzer.cvereporter.CVEReporter;
import com.fathzer.cvereporter.builder.MavenEngine;
import com.fathzer.cvereporter.common.ArtifactId;
import com.fathzer.cvereporter.common.VersionRange;
import com.fathzer.cvereporter.cve.CVE;
import com.fathzer.cvereporter.cve.DataBase;
import com.fathzer.cvereporter.repository.GitLabRepository;
import com.fathzer.cvereporter.ProjectCVEReport;

public class Log4JShellReporter {
	private static final CVE LOG4J_SHELL = new CVE(new ArtifactId("org.apache.logging.log4j", "log4j-core"), new VersionRange("[2.0,2.12.2),[2.13.0,2.16.0)"), "Log4JShell");

	
	public static void main(String[] args) throws IOException {
		// Obtain the gitlab instance's URI and user's token using ... what you want (env variable, argument ...)
		final String gitlabUri = "";
		final String token = "";
		final GitLabRepository codeRepo = new GitLabRepository(gitlabUri, token);
		final DataBase db = new DataBase();
		db.add(LOG4J_SHELL);
		final List<ProjectCVEReport> reports = new CVEReporter(codeRepo, new MavenEngine(codeRepo), db).getReports();
		// Do what you want with the reports (example: list projects affected by vulnarabilities
		reports.stream().filter(r -> r.getAlerts()!=null && !r.getAlerts().isEmpty()).forEach(r -> System.out.println(r.getProject().getPath()));
		System.out.println();
	}
}
