package com.fathzer.cvereporter;

import java.util.Collection;
import java.util.List;
import java.util.OptionalDouble;
import java.util.stream.Collectors;

import com.fathzer.cvereporter.common.Dependency;
import com.fathzer.cvereporter.cve.CVE;

/** A security alert.
 */
public class Alert {
	private Dependency dependency;
	private List<CVE> causes;

	public Alert(Dependency dependency, List<CVE> causes) {
		this.dependency = dependency;
		this.causes = causes;
	}

	public OptionalDouble getMaxScore() {
		return causes.stream().mapToDouble(CVE::getScore).filter(s->s>=0.0).max();
	}
	public static OptionalDouble getMaxScore(Collection<Alert> alerts) {
		return alerts.stream().map(Alert::getMaxScore).filter(OptionalDouble::isPresent).mapToDouble(OptionalDouble::getAsDouble).max();
	}

	public boolean hasUnknownScore() {
		return causes.stream().anyMatch(cve -> cve.getScore()<0.0);
	}
	public static boolean hasUnknownScore(Collection<Alert> alerts) {
		return alerts.stream().anyMatch(Alert::hasUnknownScore);
	}

	public Dependency getDependency() {
		return dependency;
	}

	public List<CVE> getCauses() {
		return causes;
	}

	@Override
	public String toString() {
		return dependency.toString()+": "+causes.stream().map(cve -> cve.getIdentifier()+" ("+cve.getScore()+"): "+cve.getDescription()).collect(Collectors.toList()).toString();
	}
}
