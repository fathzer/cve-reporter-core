package com.fathzer.cvereporter.common;

import java.util.Objects;

import org.apache.maven.artifact.versioning.DefaultArtifactVersion;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;
import com.fathzer.cvereporter.utils.LangUtils;

import lombok.NonNull;

/** A dependency's version.
 */
@JsonIgnoreProperties(ignoreUnknown = true)
public class Version {
	private final DefaultArtifactVersion internal;
	
	/** Constructor.
	 * @param version A Maven style version string
	 */
	@JsonCreator(mode = JsonCreator.Mode.PROPERTIES)
	public Version(@JsonProperty("version") @NonNull String version) {
		internal = new DefaultArtifactVersion(version);
	}

    @JsonSerialize(using = ToStringSerializer.class)
    @JsonProperty("version")
	DefaultArtifactVersion getInternal() {
		return internal;
	}

	@Override
	public String toString() {
		return internal.toString();
	}

	@Override
	public int hashCode() {
		return Objects.hash(internal);
	}

	@Override
	public boolean equals(Object obj) {
		return LangUtils.equals(this, obj, (a,b) -> Objects.equals(a.internal, b.internal));
	}
}