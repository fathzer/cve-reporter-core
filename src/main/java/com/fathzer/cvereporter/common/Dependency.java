package com.fathzer.cvereporter.common;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fathzer.cvereporter.utils.LangUtils;

/** A dependency.
 */
@JsonIgnoreProperties(ignoreUnknown = true)
public class Dependency {
	private final Artifact artifact;
	private final Version version;
	private final boolean testCode;
	
	/** Constructor.
	 * @param id The artifact id
	 * @param version The version
	 * @param testCode true if the dependency is specific to tests
	 */
	@JsonCreator(mode = JsonCreator.Mode.PROPERTIES)
	public Dependency(@JsonProperty("artifact") Artifact id, @JsonProperty("version") Version version, @JsonProperty("testCode") boolean testCode) {
		this.artifact = id;
		this.version = version;
		this.testCode = testCode;
	}

	/** Gets the artifact id of this dependency.
	 * @return an artifact id.
	 */
	public Artifact getArtifact() {
		return artifact;
	}

	/** Gets the version of this dependency.
	 * @return a Version.
	 */
	public Version getVersion() {
		return version;
	}
	
	/** Tests whether the dependency is specific to test code.
	 * @return true if this dependency is used only in test code
	 */
	public boolean isTestCode() {
		return testCode;
	}

	@Override
	public int hashCode() {
		return Objects.hash(artifact, version, testCode);
	}

	@Override
	public boolean equals(Object obj) {
		return LangUtils.equals(this, obj, (a,b)->a.artifact.equals(b.artifact) && a.version.equals(b.version) && a.testCode==b.testCode);
	}

	@Override
	public String toString() {
		return artifact+":"+version+(testCode?" (test)":"");
	}
}