package com.fathzer.cvereporter.repository;

import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.NoSuchFileException;
import java.nio.file.Path;
import java.util.Collections;
import java.util.List;

import com.fathzer.cvereporter.common.Project;

/** A repository that contains only one project.
 */
public class SingleProjectRepository extends LocalRepository {
	private final Project project;

	/** Constructor.
	 * @param projectRoot The project path.
	 * @throws IllegalArgumentException if projectRoot is not an existing directory
	 */
	public SingleProjectRepository(Path projectRoot) {
		super(toAbsolute(projectRoot).getParent());
		this.project = new Project("0", projectRoot.toAbsolutePath().getFileName().toString());
	}

	private static Path toAbsolute(Path projectRoot) {
		if (!Files.isDirectory(projectRoot)) {
			throw new IllegalArgumentException(projectRoot+" is not a directory");
		}
		return projectRoot.toAbsolutePath();
	}
	
	@Override
	public List<Project> getProjects() throws IOException {
		return Collections.singletonList(project);
	}
	
	@Override
	public String getFile(Project project, String path) throws IOException {
		if (!this.project.equals(project)) {
			throw new NoSuchFileException(path);
		}
		return super.getFile(project, path);
	}

	public static void main (String[] args) {
		final Path path = new java.io.File("").toPath();
		System.out.println(Files.exists(path) + "/" +Files.isDirectory(path) +" : "+path.toAbsolutePath()+" -> " + path.toAbsolutePath().getParent()+" / "+path.toAbsolutePath().getFileName());
	}
}
